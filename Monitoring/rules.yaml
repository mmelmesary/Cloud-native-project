apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: main-rules
  namespace: monitoring
  labels:
    app: kube-prometheus-stack 
    release: monitoring
spec:
  groups:
  - name: main.rules
    rules:
    - alert: HighMemoryUsage
      expr:  sum(container_memory_working_set_bytes{container_name!="POD"}) by (namespace, pod) > 2e+09
      for: 1m
      labels:
        severity: warning
        namespace: monitoring
      annotations:
        summary: "High memory usage detected in {{ $labels.namespace }}/{{ $labels.pod }}"
        description: "The memory usage for container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been above 1G for the last minute."
      
    - alert: HostHighCpuLoad
      expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 75
      for: 2m
      labels:
        severity: warning
        namespace: monitoring
      annotations:
        description: "CPU load on host is over 50%\n Value = {{ $value }}\n Instance = {{ $labels.instance }}\n"
        summary: "Host CPU load high"
        
    - alert: KubernetesPodCrashLooping
      expr: kube_pod_container_status_restarts_total > 4
      for: 2m
      labels:
        severity: critical
        namespace: monitoring
      annotations: 
        description: "Pod {{ $labels.pod }} is crash looping\n Value = {{ $value }}"
        summary: "Kubernetes pod crash looping"
    
    - alert: InstanceDown
      expr: up == 0
      for: 1m
      labels:
        severity: 'critical'
      annotations:
        title: 'Instance {{ $labels.instance }} down'
        description: '{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 1 minute.'
       